# Generated by Django 5.0.14 on 2025-08-15 10:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='Enter the quiz question', validators=[django.core.validators.MinLengthValidator(10, 'Question must be at least 10 characters long')])),
                ('choice_a', models.CharField(help_text='First choice option', max_length=200, validators=[django.core.validators.MinLengthValidator(1, 'Choice cannot be empty')])),
                ('choice_b', models.CharField(help_text='Second choice option', max_length=200, validators=[django.core.validators.MinLengthValidator(1, 'Choice cannot be empty')])),
                ('choice_c', models.CharField(help_text='Third choice option', max_length=200, validators=[django.core.validators.MinLengthValidator(1, 'Choice cannot be empty')])),
                ('choice_d', models.CharField(help_text='Fourth choice option', max_length=200, validators=[django.core.validators.MinLengthValidator(1, 'Choice cannot be empty')])),
                ('correct_answer', models.CharField(choices=[('A', 'Choice A'), ('B', 'Choice B'), ('C', 'Choice C'), ('D', 'Choice D')], help_text='Select the correct answer', max_length=1)),
                ('difficulty_level', models.CharField(choices=[('EASY', 'Easy'), ('MEDIUM', 'Medium'), ('HARD', 'Hard')], default='MEDIUM', help_text='Difficulty level of the question', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this question active in quizzes?')),
            ],
            options={
                'verbose_name': 'Quiz Question',
                'verbose_name_plural': 'Quiz Questions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(help_text='Number of correct answers')),
                ('total_questions', models.IntegerField(help_text='Total number of questions in the quiz')),
                ('percentage', models.FloatField(help_text='Percentage score calculated automatically')),
                ('time_taken', models.DurationField(blank=True, help_text='Time taken to complete the quiz', null=True)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('user_answers', models.JSONField(default=dict, help_text="JSON field storing user's answers with question IDs")),
                ('quiz_questions', models.JSONField(default=list, help_text='JSON field storing the questions that were in this quiz attempt')),
                ('user', models.ForeignKey(help_text='User who took the quiz', on_delete=django.db.models.deletion.CASCADE, related_name='quiz_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Score',
                'verbose_name_plural': 'User Scores',
                'ordering': ['-completed_at'],
            },
        ),
    ]
